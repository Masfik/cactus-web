//----------------------------------------------------------------------------------------------------------------------
// Sizes
//----------------------------------------------------------------------------------------------------------------------

// General components
$container-spacing: 15px;
$navbar-height: 60px;
$sidebar-min-width: 230px;
$card-border-radius: 20px;

// Message bubbles
$bubble-first-last-radius: 16px;
$bubble-radius: 6px;

//----------------------------------------------------------------------------------------------------------------------
// Light theme
//----------------------------------------------------------------------------------------------------------------------

$primary: #00c49aff;
$secondary: #fff;
$color3: #80ff72ff;
$color6: #ff3366ff;
$color2: #dadff7ff;
$color4: #fed766ff;
$color5: #343e3dff;

// Background
$background: #f5f7fb;
$background-lighter: white;
$background-darker: darken($background-lighter, 8);

// Typography
$text-on-primary: white;
$text-on-bg: #625f71;

//----------------------------------------------------------------------------------------------------------------------
// Mixins
//----------------------------------------------------------------------------------------------------------------------

// include box-shadow property (optional $showRight parameter)
@mixin shadow($showRight: false) {
  $shadow: if($showRight, 15px, 0) 2px 15px -1px #00000015;
  -webkit-box-shadow: $shadow;
  box-shadow: $shadow;
}

// Circular avatar properties with default size of 45px
@mixin circular-avatar($size: 45px) {
  width: $size;
  height: $size;
  border-radius: 50%;
}

// Type of overflow desired with a required $axis parameter
@mixin overflow($axis) {
  @if $axis == y {
    overflow-y: auto;
    overflow-x: hidden;
  } @else {
    overflow-y: hidden;
    overflow-x: auto;
  }

  &::-webkit-scrollbar {
    display: none;
  }
}

// Message bubble border-radius styling
@mixin bubble-borders($who) {
  $direction: if($who == sender, right, left);

  // First child if it's NOT the only child present
  &:first-child:not(:only-child) {
    border-top-#{$direction}-radius: $bubble-first-last-radius;
    border-bottom-#{$direction}-radius: $bubble-radius;
  }

  // Child(ren) between the first and last element (messages in the middle)
  &:not(:first-child):not(:last-child) {
    border-top-#{$direction}-radius: $bubble-radius;
    border-bottom-#{$direction}-radius: $bubble-radius;
  }

  // Last child if it's NOT the only child present
  &:last-child:not(:only-child) {
    border-bottom-#{$direction}-radius: $bubble-first-last-radius;
    border-top-#{$direction}-radius: $bubble-radius;
  }
}
